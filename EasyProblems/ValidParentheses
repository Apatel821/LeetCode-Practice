-----------------------------------Problem--------------------------------------------------
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
An input string is valid if:
Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 
Example 1:
Input: s = "()"
Output: true

Example 2:
Input: s = "()[]{}"
Output: true

Example 3:
Input: s = "(]"
Output: false
 
Constraints:
1 <= s.length <= 104
s consists of parentheses only '()[]{}'

---------------------------------------My Solution---------------------------------------------
class Solution:
    def isValid(self, s: str) -> bool:
        oList = []
        for x in s:
            if x == '(' or x == '[' or x == '{':
                oList.append(x)
            elif len(oList) > 0 and x == ')' and oList[len(oList)-1] == '(':
                oList.pop()
            elif len(oList) > 0 and x == ']' and oList[len(oList)-1] == '[':
                oList.pop()
            elif len(oList) > 0 and x == '}' and oList[len(oList)-1] == '{':
                oList.pop()
            else:
                return False
        if len(oList) > 0:
            return False
        return True